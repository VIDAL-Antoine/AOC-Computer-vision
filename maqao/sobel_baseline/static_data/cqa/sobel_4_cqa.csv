unroll info;unroll confidence level;unroll loop type;unroll factor;is main/unrolled;RecMII;RecMII (best case for DIV/SQRT);comp_str;comp_opts;nb paths;addr;can be analyzed;path ID;repetitions;extra_unroll_factor;loop length;fit in cache;assumed macro fusion;cycles L1;cycles L1 (best case for DIV/SQRT);cycles L1 if clean;cycles L1 (best case for DIV/SQRT) if clean;cycles L1 if FP arith vectorized;cycles L1 (best case for DIV/SQRT) if FP arith vectorized;cycles L1 if nomem vectorized;cycles L1 (best case for DIV/SQRT) if nomem vectorized;cycles L1 if fully vectorized;cycles L1 (best case for DIV/SQRT) if fully vectorized;cycles L1 if no deps;cycles L1 (best case for DIV/SQRT) if no deps;cycles L1 if hitting next bottleneck;cycles L1 (best case for DIV/SQRT) if hitting next bottleneck;cycles L1 if only FP;cycles L1 (best case for DIV/SQRT) if only FP;cycles L1 if only FP arith;cycles L1 (best case for DIV/SQRT) if only FP arith;bottlenecks;cycles instruction fetch;cycles predecoding;cycles instruction queue;cycles decoding;cycles micro-operation queue;cycles ROB-read;cycles front end;cycles dispatch;cycles P0;cycles P1;cycles P2;cycles P3;cycles P4;cycles P5;cycles P6;cycles P7;uops P0;uops P1;uops P2;uops P3;uops P4;uops P5;uops P6;uops P7;cycles div sqrt max;cycles div sqrt min;nb instructions;nb uops;nb pure loads;nb impl loads;nb stores;nb stack references;nb total FP operations;nb FP add-sub operations;nb FP mul operations;nb FP fma operations;nb FP div operations;nb FP rcp operations;nb FP sqrt operations;nb FP rsqrt operations;FP operations per cycle L1;bytes loaded or stored per cycle L1;bytes loaded or stored per cycle L1 (best case for DIV/SQRT);bytes prefetched;bytes loaded;bytes stored;bytes loaded or stored;bytes wasted;bytes loaded if fully vectorized;bytes loaded if nomem vectorized;bytes loaded if FP arith vectorized;bytes stored if fully vectorized;bytes stored if nomem vectorized;bytes stored if FP arith vectorized;bytes prefetched if fully vectorized;bytes prefetched if nomem vectorized;bytes prefetched if FP arith vectorized;packed ratio all;packed ratio load;packed ratio store;packed ratio mul;packed ratio add_sub;packed ratio fma;packed ratio div_sqrt;packed ratio other;packed ratio INT all;packed ratio INT load;packed ratio INT store;packed ratio INT mul;packed ratio INT add_sub;packed ratio INT fma;packed ratio INT other;packed ratio FP all;packed ratio FP load;packed ratio FP store;packed ratio FP mul;packed ratio FP add_sub;packed ratio FP fma;packed ratio FP div_sqrt;packed ratio FP other;vec eff ratio all;vec eff ratio load;vec eff ratio store;vec eff ratio mul;vec eff ratio add_sub;vec eff ratio fma;vec eff ratio div_sqrt;vec eff ratio other;vec eff ratio INT all;vec eff ratio INT load;vec eff ratio INT store;vec eff ratio INT mul;vec eff ratio INT add_sub;vec eff ratio INT fma;vec eff ratio INT other;vec eff ratio FP all;vec eff ratio FP load;vec eff ratio FP store;vec eff ratio FP mul;vec eff ratio FP add_sub;vec eff ratio FP fma;vec eff ratio FP div_sqrt;vec eff ratio FP other;stride_0;stride_1;stride_n;stride_unknown;stride_indirect;Nb_FLOP_add_sub;Nb_FLOP_div;Nb_FLOP_mul;Nb_FLOP_fma;Nb_FLOP_rcp;Nb_FLOP_sqrt;Nb_FLOP_rsqrt;Nb_8_bits_loads;Nb_8_bits_stores;Nb_16_bits_loads;Nb_16_bits_stores;Nb_32_bits_loads;Nb_32_bits_stores;Nb_64_bits_loads;Nb_64_bits_stores;Nb_128_bits_loads;Nb_128_bits_stores;Nb_256_bits_loads;Nb_256_bits_stores;Nb_512_bits_loads;Nb_512_bits_stores;Nb_MOVH/LPS/D_loads;Nb_MOVH/LPS/D_stores;used x86 registers;used mmx registers;used xmm registers;used ymm registers;used zmm registers;bytes moved registers;bytes moved GP registers data read;bytes moved GP registers data write;bytes moved GP registers addr read;bytes moved GP registers addr write;bytes moved SIMD registers read;bytes moved SIMD registers write;Nb_insn_ADD/SUBPD_XMM;Nb_insn_ADD/SUBPD_YMM;Nb_insn_ADD/SUBPD_ZMM;Nb_insn_ADD/SUBPS_XMM;Nb_insn_ADD/SUBPS_YMM;Nb_insn_ADD/SUBPS_ZMM;Nb_insn_ADD/SUBSD;Nb_insn_ADD/SUBSS;Nb_insn_DIVPD_XMM;Nb_insn_DIVPD_YMM;Nb_insn_DIVPD_ZMM;Nb_insn_DIVPS_XMM;Nb_insn_DIVPS_YMM;Nb_insn_DIVPS_ZMM;Nb_insn_DIVSD;Nb_insn_DIVSS;Nb_insn_FMAPD_XMM;Nb_insn_FMAPD_YMM;Nb_insn_FMAPD_ZMM;Nb_insn_FMAPS_XMM;Nb_insn_FMAPS_YMM;Nb_insn_FMAPS_ZMM;Nb_insn_FMASD;Nb_insn_FMASS;Nb_insn_MULPD_XMM;Nb_insn_MULPD_YMM;Nb_insn_MULPD_ZMM;Nb_insn_MULPS_XMM;Nb_insn_MULPS_YMM;Nb_insn_MULPS_ZMM;Nb_insn_MULSD;Nb_insn_MULSS;Nb_insn_SQRTPD_XMM;Nb_insn_SQRTPD_YMM;Nb_insn_SQRTPD_ZMM;Nb_insn_SQRTPS_XMM;Nb_insn_SQRTPS_YMM;Nb_insn_SQRTPS_ZMM;Nb_insn_SQRTSD;Nb_insn_SQRTSS;Nb_insn_RSQRTPD_XMM;Nb_insn_RSQRTPD_YMM;Nb_insn_RSQRTPD_ZMM;Nb_insn_RSQRTPS_XMM;Nb_insn_RSQRTPS_YMM;Nb_insn_RSQRTPS_ZMM;Nb_insn_RSQRTSD;Nb_insn_RSQRTSS;Nb_insn_RCPPD_XMM;Nb_insn_RCPPD_YMM;Nb_insn_RCPPD_ZMM;Nb_insn_RCPPS_XMM;Nb_insn_RCPPS_YMM;Nb_insn_RCPPS_ZMM;Nb_insn_RCPSD;Nb_insn_RCPSS;Nb_insn_SS2SD;Nb_insn_SD2SS;Nb_insn_PS2PD-XMM;Nb_insn_PS2PD-YMM;Nb_insn_PS2PD-ZMM;Nb_insn_PD2PS-XMM;Nb_insn_PD2PS-YMM;Nb_insn_PD2PS-ZMM;Nb_insn_INSERT/EXTRACT;Nb_insn_COMPRESS/EXPAND_XMM;Nb_insn_COMPRESS/EXPAND_YMM;Nb_insn_COMPRESS/EXPAND_ZMM;Nb_insn_MMX_to/from;Nb_insn_BLEND/MERGE_XMM;Nb_insn_BLEND/MERGE_YMM;Nb_insn_BLEND/MERGE_ZMM;Nb_insn_SHUFFLE/PERM_XMM;Nb_insn_SHUFFLE/PERM_YMM;Nb_insn_SHUFFLE/PERM_ZMM;Nb_insn_BROADCAST_XMM;Nb_insn_BROADCAST_YMM;Nb_insn_BROADCAST_ZMM;Nb_insn_GATHER/SCATTER_XMM;Nb_insn_GATHER/SCATTER_YMM;Nb_insn_GATHER/SCATTER_ZMM;Nb_insn_MASKMOV/MOV2M_XMM;Nb_insn_MASKMOV/MOV2M_YMM;Nb_insn_MASKMOV/MOV2M_ZMM;Nb_insn_Other_packing_XMM;Nb_insn_Other_packing_YMM;Nb_insn_Other_packing_ZMM;Nb INT arith insn: ADD/SUB-XMM;Nb INT arith insn: ADD/SUB-YMM;Nb INT arith insn: ADD/SUB-ZMM;Nb INT arith insn: CMP-XMM;Nb INT arith insn: CMP-YMM;Nb INT arith insn: CMP-ZMM;Nb INT arith insn: MUL-XMM;Nb INT arith insn: MUL-YMM;Nb INT arith insn: MUL-ZMM;Nb INT arith insn: FMA-XMM;Nb INT arith insn: FMA-YMM;Nb INT arith insn: FMA-ZMM;Nb INT arith insn: SAD-XMM;Nb INT arith insn: SAD-YMM;Nb INT arith insn: SAD-ZMM;Nb INT arith insn: OTHER-XMM;Nb INT arith insn: OTHER-YMM;Nb INT arith insn: OTHER-ZMM;Nb INT logic insn: TEST-XMM;Nb INT logic insn: TEST-YMM;Nb INT logic insn: TEST-ZMM;Nb INT logic insn: AND-XMM;Nb INT logic insn: AND-YMM;Nb INT logic insn: AND-ZMM;Nb INT logic insn: ANDN-XMM;Nb INT logic insn: ANDN-YMM;Nb INT logic insn: ANDN-ZMM;Nb INT logic insn: XOR-XMM;Nb INT logic insn: XOR-YMM;Nb INT logic insn: XOR-ZMM;Nb INT logic insn: OR-XMM;Nb INT logic insn: OR-YMM;Nb INT logic insn: OR-ZMM;Nb INT logic insn: SHIFT-XMM;Nb INT logic insn: SHIFT-YMM;Nb INT logic insn: SHIFT-ZMM;Nb INT other insn: XMM;Nb INT other insn: YMM;Nb INT other insn: ZMM;Nb scalar IOP: add-sub;Nb scalar IOP: cmp;Nb scalar IOP: mul;Nb scalar IOP: div;nb scalar INT operations;Nb SIMD IOP: add-sub;Nb SIMD IOP: cmp;Nb SIMD IOP: mul;Nb SIMD IOP: fma;Nb SIMD IOP;Nb scalar INT arith insn: ADD/SUB;Nb scalar INT arith insn: CMP;Nb scalar INT arith insn: MUL;Nb scalar INT arith insn: OTHER;Nb scalar INT logic insn: AND;Nb scalar INT logic insn: XOR;Nb scalar INT logic insn: OR;Nb scalar INT logic insn: SHIFT;nb scalar INT other insns;Nb loop control insns;ID;MAQAO Nb Path;
not unrolled or unrolled with no peel/tail loop;max;NA;NA;NA;0;0;GNU 10.2.0 -mtune=generic -march=x86-64 -g3;NA;2;400caf;true;1;1;NA;247;Yes (uop cache);false;17.75;17.75;3.5;3.5;17.75;17.75;4.25;4.25;1.14404296875;1.14404296875;NA;NA;10.25;10.25;2.25;2.25;1;1;micro-operation queue, ;NA;NA;NA;NA;17.75;NA;17.75;10.25;10.25;10.25;7.8333333333333;7.5;8;10.25;10.25;7.6666666666667;10.25;10.25;7.8333333333333;7.5;8;10.25;10.25;7.6666666666667;0;0;64;71;12;3;5;10;0;0;0;0;0;0;0;0;0.00, 0.00, ;7.0422535211268;7.0422535211268;0;104;21;125;0;96;88.485294117647;104;17;2.1944444444444;21;0;0;0;6.25;0;0;NA;NA;NA;NA;9.0909090909091;8.3333333333333;0;0;NA;NA;NA;11.111111111111;0;0;0;NA;NA;NA;NA;0;9.765625;8.3333333333333;7.8125;NA;NA;NA;NA;10.795454545455;10.416666666667;12.5;8.3333333333333;NA;NA;NA;11.111111111111;7.8125;6.25;6.25;NA;NA;NA;NA;9.375;1;0;0;1;0;0;0;0;0;0;0;0;0;1;0;0;4;3;11;1;0;0;0;0;0;0;0;0;6;0;2;0;0;761;41;76;432;248;56;40;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;1;0;0;9;0;2;0;11;0;0;0;0;0;9;0;2;0;0;0;0;0;6;3;4;2
not unrolled or unrolled with no peel/tail loop;max;NA;NA;NA;0;0;GNU 10.2.0 -mtune=generic -march=x86-64 -g3;NA;2;400caf;true;2;1;NA;247;Yes (uop cache);false;18.25;18.25;4.25;4.25;18.25;18.25;4.25;4.25;1.17626953125;1.17626953125;NA;NA;10.25;10.25;3;3;1;1;micro-operation queue, ;NA;NA;NA;NA;18.25;NA;18.25;10.25;10.25;10.25;8;8;8;10.25;10.25;8;10.25;10.25;8;8;8;10.25;10.25;8;0;0;64;73;12;4;5;10;0;0;0;0;0;0;0;0;0.00, 0.00, ;7.0684931506849;7.0684931506849;0;108;21;129;0;100;88.720588235294;108;17;2.1944444444444;21;0;0;0;5.8823529411765;0;0;NA;NA;NA;NA;8.3333333333333;8.3333333333333;0;0;NA;NA;NA;11.111111111111;0;0;0;NA;NA;NA;NA;0;9.5588235294118;7.8125;7.8125;NA;NA;NA;NA;10.416666666667;10.416666666667;12.5;8.3333333333333;NA;NA;NA;11.111111111111;7.5;6.25;6.25;NA;NA;NA;NA;8.3333333333333;1;0;0;1;0;0;0;0;0;0;0;0;0;1;0;0;5;3;11;1;0;0;0;0;0;0;0;0;6;0;2;0;0;777;45;80;440;248;56;40;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;1;0;0;9;0;2;0;11;0;0;0;0;0;9;0;2;0;0;0;0;0;6;3;4;2
not unrolled or unrolled with no peel/tail loop;max;NA;NA;NA;0;0;GNU 10.2.0 -mtune=generic -march=x86-64 -g3;NA;2;400caf;true;AVG;1;NA;247;NA;NA;18;18;3.875;3.875;18;18;4.25;4.25;1.16015625;1.16015625;NA;NA;10.25;10.25;2.625;2.625;1;1;;NA;NA;NA;NA;18;NA;18;10.25;10.25;10.25;7.9166666666667;7.75;8;10.25;10.25;7.8333333333333;10.25;10.25;7.9166666666667;7.75;8;10.25;10.25;7.8333333333333;0;0;64;72;12;3.5;5;10;0;0;0;0;0;0;0;0;0.00, 0.00, ;7.0553733359058;7.0553733359058;0;106;21;NA;0;98;88.602941176471;106;17;2.1944444444444;21;0;0;0;6.0661764705882;0;0;NA;NA;NA;NA;8.7121212121212;8.3333333333333;0;0;NA;NA;NA;11.111111111111;0;0;0;NA;NA;NA;NA;0;9.6622242647059;8.0729166666667;7.8125;NA;NA;NA;NA;10.606060606061;10.416666666667;12.5;8.3333333333333;NA;NA;NA;11.111111111111;7.65625;6.25;6.25;NA;NA;NA;NA;8.8541666666667;1;0;0;1;0;0;0;0;0;0;0;0;0;1;0;0;4.5;3;11;1;0;0;0;0;0;0;0;0;6;0;2;0;0;769;43;78;436;248;56;40;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;1;0;0;9;0;2;0;11;0;0;0;0;0;9;0;2;0;0;0;0;0;6;3;4;2
