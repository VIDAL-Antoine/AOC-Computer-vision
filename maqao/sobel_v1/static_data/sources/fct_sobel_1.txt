/usr/lib/gcc/x86_64-linux-gnu/9/include/mm_malloc.h: 45 - 54
--------------------------------------------------------------------------------

45:   if (posix_memalign (&__ptr, __alignment, __size) == 0)
46:     return __ptr;
47:   else
48:     return NULL;
[...]
54:   free (__ptr);
/scratch/chps/users/user22024/Projet/AOC-Computer-vision/sobel.c: 21 - 399
--------------------------------------------------------------------------------

21:   for (u64 i = 0; i < H * W * 3; i += 3)
22:     {
23:       //Convert RGB color values into grayscale for each pixel using color weights
24:       //Other possible weights: 0.59, 0.30, 0.11
25:       //Principle: mix different quantities of R, G, B to create a variant of gray
26:       gray = ((float)frame[i] * 0.299) + ((float)frame[i + 1] * 0.587) + ((float)frame[i + 2] * 0.114);
27:       
28:       frame[i]     = gray;
29:       frame[i + 1] = gray;
30:       frame[i + 2] = gray;
[...]
223: {
224:   //
225:   if (argc < 3)
226:     return printf("Usage: %s [raw input file] [raw output file]\n", argv[0]), 1;
227:   
228:   u64 cycles[MAX_SAMPLES], cycles_a, cycles_b;
229:   u64 nb_bytes = 1, frame_count = 0, samples_count = 0;
230: 
231:   //
232:   FILE *fpi = fopen(argv[1], "rb"); 
233:   FILE *fpo = fopen(argv[2], "wb");
234: 
235:   //
236:   if (!fpi)
237:     return printf("Error: cannot open file '%s'\n", argv[1]), 2;
238:   
239:   //
240:   if (!fpo)
241:     return printf("Error: cannot open file '%s'\n", argv[2]), 2;
[...]
249:   while ((nb_bytes = fread(cframe, sizeof(u8), H * W * 3, fpi)))
[...]
309:       sobel_v1(cframe, oframe, 100.0);
[...]
320:       u64 elapsed = (cycles_a - cycles_b);
321: 
322:       //
323:       if (samples_count < MAX_SAMPLES)
324: 	      cycles[samples_count++] = elapsed;
325:       
326:       //frame number; size in Bytes; elapsed cycles; bytes per cycle
327:       fprintf(stdout, "%20llu; %20llu; %20llu; %15.3lf\n", frame_count, nb_bytes, elapsed, (f64)(nb_bytes) / (f64)elapsed);
328: 
329:       //
330:       frame_count++;
331: #if BASELINE || V1 || V2
332:       fwrite(oframe, sizeof(u8), H * W * 3, fpo);
[...]
343:   sort(cycles, samples_count);
[...]
349:   mea = mean(cycles, samples_count);
350:   
351:   //
352:   dev = stddev(cycles, samples_count);
353: 
354:   //
355:   min = cycles[0];
356:   max = cycles[samples_count - 1];
357:   avg = (min + max) / 2.0;
[...]
371: 	  (dev * 100.0 / mea));
[...]
395:   fclose(fpi);
396:   fclose(fpo);
397: 
398:   return  0;
399: }
/scratch/chps/users/user22024/Projet/AOC-Computer-vision/rdtsc.h: 9 - 11
--------------------------------------------------------------------------------

9:   __asm__ volatile ("rdtsc" : "=a" (a), "=d" (d));
10: 
11:   return (d << 32) | a;
/usr/include/x86_64-linux-gnu/bits/stdio2.h: 100 - 297
--------------------------------------------------------------------------------

100:   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
[...]
107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
[...]
297:   return __fread_alias (__ptr, __size, __n, __stream);
