/scratch/chps/users/user22024/Projet/AOC-Computer-vision/sobel.c: 223 - 399
--------------------------------------------------------------------------------

223: {
224:   //
225:   if (argc < 3)
226:     return printf("Usage: %s [raw input file] [raw output file]\n", argv[0]), 1;
[...]
232:   FILE *fpi = fopen(argv[1], "rb"); 
233:   FILE *fpo = fopen(argv[2], "wb");
234: 
235:   //
236:   if (!fpi)
237:     return printf("Error: cannot open file '%s'\n", argv[1]), 2;
238:   
239:   //
240:   if (!fpo)
241:     return printf("Error: cannot open file '%s'\n", argv[2]), 2;
[...]
258:   u8* oframe = NULL;
259: 
260:   if (posix_memalign((void*)&cframe, 64, SIZE_FRAME * NB_FRAMES_VIDEO))
261:     return 1;
262: 
263:   if (posix_memalign((void*)&oframe, 64, SIZE_FRAME * NB_FRAMES_VIDEO))
264:     return 1;
265: 
266:   cframe = __builtin_assume_aligned(cframe, 64);
267:   oframe = __builtin_assume_aligned(oframe, 64);
268:   
269:   nb_bytes = fread(cframe, SIZE_FRAME, NB_FRAMES_VIDEO, fpi);
270: 
271:   #pragma omp parallel for shared(cframe, oframe, cycles, samples_count, frame_count, nb_bytes)
[...]
336:   fwrite(oframe, SIZE_FRAME, NB_FRAMES_VIDEO, fpo);
[...]
343:   sort(cycles, samples_count);
[...]
349:   mea = mean(cycles, samples_count);
350:   
351:   //
352:   dev = stddev(cycles, samples_count);
353: 
354:   //
355:   min = cycles[0];
356:   max = cycles[samples_count - 1];
357:   avg = (min + max) / 2.0;
[...]
387: 	  (dev * 100.0 / mea));
388: 
389:   free(cframe);
390:   free(oframe);
391: 
392: #endif
393: 
394:   //
395:   fclose(fpi);
396:   fclose(fpo);
397: 
398:   return  0;
399: }
/usr/include/x86_64-linux-gnu/bits/stdio2.h: 100 - 297
--------------------------------------------------------------------------------

100:   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
[...]
107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
[...]
297:   return __fread_alias (__ptr, __size, __n, __stream);
